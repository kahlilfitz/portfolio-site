{"version":3,"sources":["webpack:///./src/components/robot/robot-char.js","webpack:///./src/pages/robot.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEvent.js"],"names":["ROBOT_CONFIG","IDLE","eyesConfig","open","leftArmConfig","rightArmConfig","AWAKE","WAVE_RIGHT","waving","WAVE_LEFT","RAISE_RIGHT","RAISE_LEFT","RAISE_BOTH","WAVE_BOTH","renderTorso","torsoConfig","id","x","y","width","height","rx","cx","cy","ry","className","renderEyes","r","renderLeftArm","armConfig","transform","renderRightArm","RobotChar","props","version","viewBox","preserveAspectRatio","style","fill","fillColor","bodyConfig","charConfig","data-name","CHAR_STATE","keypressSubject","fromEvent","target","eventName","options","resultSelector","isFunction","undefined","pipe","map","args","isArray","apply","Observable","subscriber","setupSubscription","sourceObj","handler","unsubscribe","addEventListener","removeEventListener","isEventTarget","source_1","on","off","isJQueryStyleEventEmitter","source_2","addListener","removeListener","isNodeStyleEventEmitter","source_3","length","TypeError","i","len","add","e","arguments","next","Array","prototype","slice","call","document","event","code","key","altKey","ctrlKey","shiftKey","metaKey","RobotIndex","useState","robotConfig","setRobotConfig","useEffect","subscribe","keyToInt","parseInt","newConfig","isNaN","to"],"mappings":"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","file":"component---src-pages-robot-js-e4e1f8b1b8ed5cd46744.js","sourcesContent":["import React from 'react'\nimport './robot-char.css'\n\nexport const ROBOT_CONFIG = {\n    IDLE: {\n        eyesConfig: { open: false },\n        leftArmConfig: null,\n        rightArmConfig: null\n    },\n    AWAKE: {\n        eyesConfig: { open: true },\n        leftArmConfig: null,\n        rightArmConfig: null\n    },\n\n    WAVE_RIGHT: {\n        eyesConfig: { open: true },\n        leftArmConfig: null,\n        rightArmConfig: { waving: true }\n    },\n    WAVE_LEFT: {\n        eyesConfig: { open: true },\n        leftArmConfig: { waving: true },\n        rightArmConfig: null\n    },\n    RAISE_RIGHT: {\n        eyesConfig: { open: true },\n        leftArmConfig: null,\n        rightArmConfig: { waving: false }\n    },\n    RAISE_LEFT: {\n        eyesConfig: { open: true },\n        leftArmConfig: { waving: false },\n        rightArmConfig: null\n    },\n    RAISE_BOTH: {\n        eyesConfig: { open: true },\n        leftArmConfig: { waving: false },\n        rightArmConfig: { waving: false }\n    },\n    WAVE_BOTH: {\n        eyesConfig: { open: true },\n        leftArmConfig: { waving: true },\n        rightArmConfig: { waving: true }\n    }\n}\n\nconst renderBody = (bodyConfig) => {\n    return (\n        <g id=\"Layer_DB\" data-name=\"DB Whole\">\n            {renderTorso()}\n            {renderEyes(bodyConfig.eyesConfig)}\n            {renderRightArm(bodyConfig.rightArmConfig)}\n            {renderLeftArm(bodyConfig.leftArmConfig)}\n        </g>\n    )\n}\n\nconst renderTorso = (torsoConfig) => {\n    return (\n        <g id=\"Layer_Body\">\n            <rect x=\"36.5\" y=\"56.5\" width=\"229\" height=\"268\" rx=\"70.36\" />\n            <ellipse cx=\"151\" cy=\"122\" rx=\"114.5\" ry=\"121.5\" />\n            <ellipse className=\"DB-cls-1\" cx=\"151.5\" cy=\"81\" rx=\"84.5\" ry=\"56\" />\n            <rect className=\"DB-cls-1\" x=\"67\" y=\"69\" width=\"169\" height=\"69\" rx=\"15.19\" />\n            <ellipse className=\"DB-cls-2\" cx=\"151.5\" cy=\"325.5\" rx=\"46\" ry=\"31\" />\n        </g>\n    )\n}\n\nconst renderEyes = (eyesConfig) => {\n    if (eyesConfig.open) {\n        return (\n            <g id=\"Layer_Eyes\">\n                <circle className=\"DB-cls-2\" cx=\"108.73\" cy=\"101.25\" r=\"20.25\" />\n                <circle className=\"DB-cls-2\" cx=\"193.25\" cy=\"101.25\" r=\"20.25\" />\n            </g>\n        )\n    }\n    return (\n        <g id=\"Layer_Eyes\">\n            <rect className=\"DB-cls-2\" x=\"88.5\" y=\"96.5\" width=\"40\" height=\"10\" />\n            <rect className=\"DB-cls-2\" x=\"173.5\" y=\"96.5\" width=\"40\" height=\"10\" />\n        </g>\n    )\n\n}\n\nconst renderLeftArm = (armConfig) => {\n    if (armConfig) {\n        if (armConfig.waving) {\n            return (\n                <g id=\"Layer_Left_Arm\"\n                    className=\"DB-cls-2 Wave-anim Wave-left\">\n                    <rect x=\"281.36\" y=\"74.84\" width=\"10\" height=\"114\" transform=\"translate(49.9 -76.65) rotate(16.68)\" />\n                    <ellipse cx=\"304.67\" cy=\"74.07\" rx=\"20\" ry=\"12.5\" transform=\"translate(106.01 316.65) rotate(-64.35)\" />\n                    <ellipse cx=\"265.5\" cy=\"180\" rx=\"18\" ry=\"23.5\" />\n                </g>\n            )\n        } else {\n            return (\n                <g id=\"Layer_Left_Arm\" className=\"DB-cls-2\">\n                    <rect x=\"281.36\" y=\"74.84\" width=\"10\" height=\"114\" transform=\"translate(49.9 -76.65) rotate(16.68)\" />\n                    <ellipse cx=\"304.67\" cy=\"74.07\" rx=\"20\" ry=\"12.5\" transform=\"translate(106.01 316.65) rotate(-64.35)\" />\n                    <ellipse cx=\"265.5\" cy=\"180\" rx=\"18\" ry=\"23.5\" />\n                </g>\n            )\n        }\n\n    }\n\n    return (\n        <g id=\"Layer_Left_Arm\" className=\"DB-cls-2\">\n            <rect className=\"DB-cls-2\" x=\"274.5\" y=\"177.5\" width=\"10\" height=\"114\" transform=\"translate(592.14 422.56) rotate(171.03)\" />\n            <ellipse className=\"DB-cls-2\" cx=\"265.5\" cy=\"180\" rx=\"18\" ry=\"23.5\" />\n            <ellipse className=\"DB-cls-2\" cx=\"288\" cy=\"294.5\" rx=\"12.5\" ry=\"20\" />\n        </g>\n    )\n}\n\nconst renderRightArm = (armConfig) => {\n    if (armConfig) {\n        if (armConfig.waving) {\n            return (\n                <g id=\"Layer_Right_Arm\"\n                    className=\"DB-cls-2 Wave-anim Wave-right\">\n                    <g transform=\"translate(-17.38 0)\">\n                        <rect x=\"28.02\" y=\"74.84\" width=\"10\" height=\"114\" transform=\"translate(102.5 248.66) rotate(163.32)\" />\n                        <ellipse cx=\"53.88\" cy=\"180\" rx=\"18\" ry=\"23.5\" />\n                        <ellipse cx=\"14.71\" cy=\"74.07\" rx=\"12.5\" ry=\"20\" transform=\"translate(-30.62 13.67) rotate(-25.65)\" />\n                    </g>\n                </g>\n            )\n        } else {\n            return (\n                <g id=\"Layer_Right_Arm\" className=\"DB-cls-2\">\n\n                    <g transform=\"translate(-17.38 0)\">\n                        <rect x=\"28.02\" y=\"74.84\" width=\"10\" height=\"114\" transform=\"translate(102.5 248.66) rotate(163.32)\" />\n                        <ellipse cx=\"53.88\" cy=\"180\" rx=\"18\" ry=\"23.5\" />\n                        <ellipse cx=\"14.71\" cy=\"74.07\" rx=\"12.5\" ry=\"20\" transform=\"translate(-30.62 13.67) rotate(-25.65)\" />\n                    </g>\n                </g>\n            )\n        }\n\n    }\n\n    return (\n        <g id=\"Layer_Right_Arm\" className=\"DB-cls-2\">\n            <rect x=\"17.5\" y=\"177.5\" width=\"10\" height=\"114\" transform=\"translate(36.84 -0.64) rotate(8.97)\" />\n            <ellipse cx=\"36.5\" cy=\"180\" rx=\"18\" ry=\"23.5\" />\n            <ellipse cx=\"13\" cy=\"294.5\" rx=\"12.5\" ry=\"20\" />\n        </g>\n    )\n}\n\nconst RobotChar = (props) => {\n    return (\n        <div className=\"DBContainer\">\n            <svg version=\"1.1\"\n                viewBox=\"0 0 301 357\"\n                className=\"DB Bounce-anim\"\n                preserveAspectRatio=\"xMidYMid meet\"\n                style={{fill: props.fillColor}}>\n                <g>\n                    {renderBody(props.charConfig)}\n                </g>\n            </svg>\n        </div>\n    )\n}\n\nexport default RobotChar","import React, { useState, useEffect } from 'react'\nimport Layout from '../components/layout'\nimport RobotCharacter, { ROBOT_CONFIG } from '../components/robot/robot-char'\nimport { Link } from 'gatsby'\nimport { fromEvent } from 'rxjs'\n\nconst CHAR_STATE = [\n    ROBOT_CONFIG.IDLE,\n    ROBOT_CONFIG.AWAKE,\n    ROBOT_CONFIG.RAISE_RIGHT,\n    ROBOT_CONFIG.WAVE_RIGHT,\n    ROBOT_CONFIG.RAISE_LEFT,\n    ROBOT_CONFIG.WAVE_LEFT,\n    ROBOT_CONFIG.RAISE_BOTH,\n    ROBOT_CONFIG.WAVE_BOTH\n]\n\nconst keypressSubject = fromEvent(document, 'keyup', event => {\n    return {\n        code: event.code,\n        key: event.key,\n        altKey: event.altKey,\n        ctrlKey: event.ctrlKey,\n        shiftKey: event.shiftKey,\n        metaKey: event.metaKey\n    }\n})\n\nconst RobotIndex = () => {\n    const [robotConfig, setRobotConfig] = useState(ROBOT_CONFIG.IDLE)\n\n    useEffect(() => {\n        keypressSubject.subscribe((event) => {\n            const keyToInt = parseInt(event.key)\n            const newConfig = !isNaN(keyToInt) && CHAR_STATE[keyToInt] ? CHAR_STATE[keyToInt] : ROBOT_CONFIG.IDLE\n            if (newConfig) { setRobotConfig(newConfig) }\n        })\n    }, [])\n    return (\n        <Layout>\n            <Link to=\"/\">Home</Link>\n            <h1>Press 0-7 to change robot state.</h1>\n            <div className=\"Character-mode\">\n                <RobotCharacter\n                    charConfig={robotConfig}\n                    fillColor=\"black\"\n                />\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default RobotIndex","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\n\nvar toString = /*@__PURE__*/function () {\n  return Object.prototype.toString;\n}();\n\nexport function fromEvent(target, eventName, options, resultSelector) {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n\n  if (resultSelector) {\n    return fromEvent(target, eventName, options).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n    }));\n  }\n\n  return new Observable(function (subscriber) {\n    function handler(e) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n\n    setupSubscription(target, eventName, handler, subscriber, options);\n  });\n}\n\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n  var unsubscribe;\n\n  if (isEventTarget(sourceObj)) {\n    var source_1 = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n\n    unsubscribe = function unsubscribe() {\n      return source_1.removeEventListener(eventName, handler, options);\n    };\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    var source_2 = sourceObj;\n    sourceObj.on(eventName, handler);\n\n    unsubscribe = function unsubscribe() {\n      return source_2.off(eventName, handler);\n    };\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    var source_3 = sourceObj;\n    sourceObj.addListener(eventName, handler);\n\n    unsubscribe = function unsubscribe() {\n      return source_3.removeListener(eventName, handler);\n    };\n  } else if (sourceObj && sourceObj.length) {\n    for (var i = 0, len = sourceObj.length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj) {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj) {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj) {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}"],"sourceRoot":""}